# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from sp_gateway_server.models.base_model_ import Model
from sp_gateway_server import util


class Document(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, url=None, title=None, description=None, score=None):  # noqa: E501
        """Document - a model defined in OpenAPI

        :param url: The url of this Document.  # noqa: E501
        :type url: str
        :param title: The title of this Document.  # noqa: E501
        :type title: str
        :param description: The description of this Document.  # noqa: E501
        :type description: str
        :param score: The score of this Document.  # noqa: E501
        :type score: float
        """
        self.openapi_types = {
            'url': str,
            'title': str,
            'description': str,
            'score': float
        }

        self.attribute_map = {
            'url': 'url',
            'title': 'title',
            'description': 'description',
            'score': 'score'
        }

        self._url = url
        self._title = title
        self._description = description
        self._score = score

    @classmethod
    def from_dict(cls, dikt) -> 'Document':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Document of this Document.  # noqa: E501
        :rtype: Document
        """
        return util.deserialize_model(dikt, cls)

    @property
    def url(self):
        """Gets the url of this Document.


        :return: The url of this Document.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this Document.


        :param url: The url of this Document.
        :type url: str
        """

        self._url = url

    @property
    def title(self):
        """Gets the title of this Document.


        :return: The title of this Document.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this Document.


        :param title: The title of this Document.
        :type title: str
        """

        self._title = title

    @property
    def description(self):
        """Gets the description of this Document.


        :return: The description of this Document.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Document.


        :param description: The description of this Document.
        :type description: str
        """

        self._description = description

    @property
    def score(self):
        """Gets the score of this Document.


        :return: The score of this Document.
        :rtype: float
        """
        return self._score

    @score.setter
    def score(self, score):
        """Sets the score of this Document.


        :param score: The score of this Document.
        :type score: float
        """

        self._score = score
